package com.atguigu.test.test4;

// Dog extends Pet Dog类继承自Pet类，Dog是子类Pet是父类
// 子类可以继承父类的所有属性和方法，构造方法不能继承
// Java语言规定一个类只能有一个直接父类，只能继承自一个类
// Java语言支持多层次继承，一个类的直接父类也可以继承父类
// 一个类如果有显示的继承，则显示继承自父类，如果没有显示的继承则默认继承自Object
public class Dog extends Pet {

    // 方法重写必须在父子类中，子类编写一个方法签名和父类一模一样的方法
    // 一旦发生方法重写，子类对象再调用方法时一定调用重写之后的方法
    // 私有修饰的方法不允许重写
    // 子类在重写父类方法时子类方法的访问修饰符只能比父类方法的访问修饰更宽，但不能比父类的更窄
    // 子类重写父类方法时如果父类方法的返回类型是void或者是基础数据类型，则子类重写方法的返回类型必须和父类方法返回类型一致
    // 父类方法返回类型为引用数据类型时，子类重写方法的返回类型可以是父类方法返回类型的子类型
    // 父类方法如果抛出异常，则子类可以选择和父类方法抛出同种异常，也可以抛出父类方法抛出异常的子异常
    public Cat play(){
        // this.play();
        super.play();// 在子类类体中调用重写之前的父类的方法
        System.out.println("玩儿丢飞盘");
        return null;
    }

    public void work(){
        System.out.println("工作");
    }
}
